generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id             Int       @id @default(autoincrement())
  nombreCompleto String    @db.VarChar(20)
  nombreUsuario  String    @unique @db.VarChar(20)
  descripcion    String?   @db.VarChar(100)
  email          String    @unique @db.VarChar(50)
  contrasena     String    @db.VarChar(200)
  fotoPerfil     String?   @db.Text
  fotoExtension  String?   @db.VarChar(4)
  habilitado     Boolean   @default(true)
  rol            String    @default("usuario") @db.VarChar(50)
  createAt       DateTime  @default(now()) @db.Timestamptz
  updatedAt      DateTime  @default(now()) @db.Timestamptz
  fotos          Foto[]
  meGusta        MeGusta[]
}

model Foto {
  id            Int           @id @default(autoincrement())
  propietario   Usuario       @relation(fields: [propietarioId], references: [id])
  propietarioId Int
  cantidad      Int           @default(0)
  descripcion   String        @db.VarChar(50)
  ubicacion     String        @db.VarChar(30)
  base64        String?
  hashtags      HashtagFoto[]
  meGusta       MeGusta[]
}

model Hashtag {
  id       Int           @id @default(autoincrement())
  etiqueta String        @db.VarChar(10)
  fotos    HashtagFoto[]
}

model HashtagFoto {
  id        Int     @id @default(autoincrement())
  foto      Foto    @relation(fields: [fotoId], references: [id])
  fotoId    Int
  hashtag   Hashtag @relation(fields: [hashtagId], references: [id])
  hashtagId Int

  @@unique([fotoId, hashtagId])
}

model MeGusta {
  id              Int     @id @default(autoincrement())
  interactuador   Usuario @relation(fields: [interactuadorId], references: [id])
  interactuadorId Int
  foto            Foto    @relation(fields: [fotoId], references: [id])
  fotoId          Int

  @@unique([interactuadorId, fotoId])
}
